---
import { getLangFromUrl, useTranslations } from '@/i18n/utils'
import Section from './section.astro'

import inventory from '@/assets/inventory.png'

const inventoryData = [
  // First row
  { id: 101, x: '25.5%', y: '34%', status: 'available' },
  { id: 102, x: '30%', y: '37.5%', status: 'reserved' },
  { id: 103, x: '34.5%', y: '41.5%', status: 'sold' },
  { id: 104, x: '39.5%', y: '45.5%', status: 'sold' },
  { id: 105, x: '44.5%', y: '49.5%', status: 'sold' },

  // Second row
  { id: 106, x: '62%', y: '65%', status: 'reserved' },
  { id: 107, x: '66%', y: '61%', status: 'sold' },
  { id: 108, x: '67.5%', y: '52.5%', status: 'available' },
  { id: 109, x: '71.5%', y: '49%', status: 'reserved' },
  { id: 110, x: '72.5%', y: '41%', status: 'available' },
  { id: 111, x: '76.5%', y: '38%', status: 'available' },
  { id: 112, x: '77%', y: '30%', status: 'available' },
  { id: 113, x: '81%', y: '25.5%', status: 'reserved' },

  // Third row
  { id: 114, x: '46%', y: '26.5%', status: 'available' },
  { id: 115, x: '40.3%', y: '24.5%', status: 'available' },
  { id: 116, x: '34.5%', y: '22.5%', status: 'available' },
  { id: 117, x: '29.2%', y: '21%', status: 'available' },
  { id: 118, x: '23.7%', y: '19%', status: 'available' },
  { id: 119, x: '18.5%', y: '18%', status: 'available' }
]

const statusColors = {
  available: 'bg-available',
  reserved: 'bg-reserved',
  sold: 'bg-sold'
}

const lang = getLangFromUrl(Astro.url)
const t = useTranslations(lang)
---

<div class='bg-primary-coral'>
  <Section class='relative flex-col py-14 px-4 !bg-transparent'>
    <heading
      class='uppercase text-center h-fit flex flex-col items-center gap-2 text-white'
    >
      <h2 class='text-md sm:text-xl tracking-[1rem]'>
        {t('inventory.section')}
      </h2>
      <h1
        class='text-3xl sm:text-5xl tracking-[1rem] font-semibold leading-tight'
      >
        {t('inventory.title')}
      </h1>
    </heading>

    <div class='w-full h-[1px] my-8 bg-white'></div>

    <div class='relative w-full h-fit'>
      <div class='max-w-full text-white uppercase'>
        <div
          class='max-w-full flex flex-row flex-wrap gap-x-8 gap-y-2 items-center justify-end mb-4'
        >
          <div class='flex flex-row gap-2 items-center'>
            <div class='border-1 size-6 rounded-xs border-white bg-available'>
            </div>
            <p>{t('inventory.available')}</p>
          </div>

          <div class='flex flex-row gap-2 items-center'>
            <div class='border-1 size-6 rounded-xs border-white bg-reserved'>
            </div>
            <p>{t('inventory.reserved')}</p>
          </div>

          <div class='flex flex-row gap-2 items-center'>
            <div class='border-1 size-6 rounded-xs border-white bg-sold'></div>
            <p>{t('inventory.sold')}</p>
          </div>
        </div>
      </div>

      <div class='relative w-full h-fit'>
        <img src={inventory.src} alt='Inventario' class='bg-primary-coral' />
        <div class='absolute inset-0 w-full h-full'>
          {
            inventoryData.map(({ id, x, y, ...info }) => (
              <div
                class={`absolute top-[${y}] left-[${x}] w-[4%] h-auto aspect-square rounded-full ${statusColors[info.status as keyof typeof statusColors]} opacity-60 md:opacity-60 md:scale-100 md:hover:opacity-80 md:hover:scale-110 transition`}
                style={{
                  top: y,
                  left: x
                }}
                data-id={id}
                data-info={JSON.stringify(info)}
                data-lang={lang}
              />
            ))
          }
        </div>
      </div>
      <article
        id='information'
        class='hidden flex-col absolute bottom-4 left-4 rounded-lg p-3 border-1 border-white/60 text-white uppercase bg-primary-coral shadow-md tracking-wider transition-all'
      >
        <h3 id='modelo' class='text-xl font-semibold leading-none'>
          {t(`inventory.coral-model`)}
        </h3>
        <small id='status' class='text-sm text-white/80'
          >{t('inventory.available')}</small
        >

        <div class='w-full h-[1px] my-2 bg-white'></div>

        <div
          class='grid grid-cols-2 grid-rows-3 gap-2 font-extralight tracking-wide text-lg [&>h4]:font-normal'
        >
          <h4>{t('inventory.beedrooms')}</h4>
          <p id='bedrooms'>3</p>

          <h4>{t('inventory.size')}</h4>
          <p id='size'>186.57 m2</p>

          <h4>{t('inventory.price')}</h4>
          <p id='price'>$2,743,195 (MXN)</p>
        </div>
      </article>
    </div>
  </Section>
</div>

<script>
  import { useTranslations } from '@/i18n/utils'

  const inventoryData = document.querySelectorAll('[data-info]')
  const information = document.querySelector('article#information')

  const statusElement = information?.querySelector('#status')
  const bedroomsElement = information?.querySelector('#bedrooms')
  const sizeElement = information?.querySelector('#size')
  const priceElement = information?.querySelector('#price')

  inventoryData.forEach((data) => {
    const { status, bedrooms, size, price } = JSON.parse(
      (data as HTMLElement).dataset.info || '{}'
    )
    const lang = (data as HTMLElement).dataset.lang as 'en' | 'es'
    const t = useTranslations(lang)

    data.addEventListener('mouseover', () => {
      information?.classList.replace('hidden', 'show-information')
      if (statusElement)
        statusElement.textContent = t(`inventory.${status as keyof typeof t}`)
      if (bedroomsElement) bedroomsElement.textContent = bedrooms
      if (sizeElement) sizeElement.textContent = size
      if (priceElement) priceElement.textContent = price

      inventoryData.forEach((data) => {
        data.classList.replace('md:opacity-100', 'md:opacity-60')
        data.classList.replace('md:scale-110', 'md:scale-100')
      })
      data.classList.replace('md:opacity-60', 'md:opacity-100')
      data.classList.replace('md:scale-100', 'md:scale-110')
    })
  })
</script>

<style>
  .show-information {
    opactity: 1;
    display: flex;

    @media (max-width: 768px) {
      display: none;
      opacity: 0;
    }
  }

  .hidden {
    opacity: 0;
    display: none;
  }
</style>
