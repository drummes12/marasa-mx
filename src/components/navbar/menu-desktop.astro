---
const { sections } = Astro.props
---

<ul
  id='navbar-menu-desktop'
  class='hidden md:flex flex-wrap gap-x-8 gap-y-2 items-center justify-around w-full group py-4 px-8 md:px-24'
>
  {
    sections.map(({ title, href }) => (
      <li
        id={`navbar-${href.replaceAll('/#', '')}`}
        class={`md:group-hover:opacity-40 md:hover:!opacity-100 md:hover:underline md:hover:!text-primary-coral md:hover:!font-normal transition-all ${
          href === '/#welcome' ? 'section-active' : ''
        }`}
      >
        <a href={href}>{title}</a>
      </li>
    ))
  }
</ul>

<script>
  const menu = document.querySelector('#navbar-menu-desktop')
  const optionsMenu = document.querySelectorAll('#navbar-menu-desktop li')

  const sectionsMap = new Map()
  document.querySelectorAll('section[id]').forEach((section) => {
    const key = section.id
    const li = document.querySelector(`#navbar-${key}`)
    if (li?.textContent) {
      sectionsMap.set(section, li.textContent.trim())
    }
  })

  const observer = new IntersectionObserver(
    (entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          const label = sectionsMap.get(entry.target)
          if (label) {
            optionsMenu.forEach((option) => {
              option.classList.remove('section-active')
            })
            const activeOption = menu?.querySelector(
              `#navbar-${entry.target.id}`
            )
            activeOption?.classList.add('section-active')
          }
        }
      })
    },
    {
      rootMargin: '0px 0px -50% 0px',
      threshold: 0.1
    }
  )

  sectionsMap.forEach((_, section) => observer.observe(section))
</script>
